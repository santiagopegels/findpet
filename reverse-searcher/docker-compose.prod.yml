# Docker Compose para Producción
# Uso: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: '3.8'

services:
  reverse-searcher:
    # Configuración optimizada para producción
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    
    # Variables de entorno para producción
    environment:
      DEBUG: "false"
      LOG_LEVEL: "INFO"
      LOG_FORMAT: "json"
      MODEL_TYPE: "efficientnet"
      REDIS_ENABLED: "true"
      
    # Comando optimizado para producción
    command: gunicorn --bind 0.0.0.0:5000 --workers 4 --threads 4 --timeout 120 --access-logfile - --error-logfile - server:app
    
    # NO montar código fuente en producción
    volumes:
      - ./images:/app/images
      - ./features:/app/features
      - ./models:/app/models
      - ./logs:/app/logs
    
    # Reinicio automático
    restart: always

  redis:
    # Configuración Redis para producción
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M
    
    # Configuración optimizada
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru --save 900 1 --save 300 10 --save 60 10000
    
    # NO exponer puerto en producción
    ports: []
    
    restart: always

  # ================================
  # Nginx Reverse Proxy para Producción
  # ================================
  nginx:
    image: nginx:alpine
    container_name: findog-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - reverse-searcher
    restart: always
    networks:
      - findog-network 